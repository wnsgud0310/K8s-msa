plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'org.msa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.1'
    }
}

dependencies {
    // 추가된 라이브러리 - start
    // 2-3 JPA 적용
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'com.h2database', name: 'h2', version: '2.2.224'
    //implementation 'com.h2database:h2'

    //2-4 유효성 체크
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 추가된 라이브러리 - end

    // 2-8 API 문서화(springdoc-openapi)
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'

    implementation 'org.json:json:20200518'

    // Config Server 완 연동을 위한 의존관계 설정
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    // bootstrap.yaml 을 사용하기 위한 의존관계 설정
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
jib {
    // base image 설정
    from {
        image = "openjdk:17"
    }
    to {
        image = "wnsgud0310/msa-item"
        tags = ['latest', '0.1.0']
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}
